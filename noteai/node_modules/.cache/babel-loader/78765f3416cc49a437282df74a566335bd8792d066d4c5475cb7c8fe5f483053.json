{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sdugb\\\\OneDrive\\\\Desktop\\\\scribeaiapp\\\\NoteTakingAI\\\\noteai\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// create a react component that inputs a textarea message then performs a fetch request to localhost:3001 gets back a response a data.message and displys that message in a box below\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const NEXT_PUBLIC_OPENAI_API_KEY = \"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\";\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:3001', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(res => res.json()).then(data => setResponse(data.message));\n  };\n  const [formData, setFormData] = useState < FormData | null > null;\n  // write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\n\n  const handleFile = async e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"model\", \"whisper-1\");\n      data.append(\"language\", \"en\");\n      setFormData(data);\n      if (file.size > 25 * 1024 * 1024) {\n        alert(\"Please upload an audio file less than 25MB\");\n        return;\n      }\n    }\n  };\n  const [convertedText, setConvertedText] = useState < string > \"\";\n  const [loading, setLoading] = useState(false);\n  const sendAudio = async () => {\n    var _process$env$NEXT_PUB;\n    setLoading(true);\n    const res = await fetch(\"https://api.openai.com/v1/audio/transcriptions\", {\n      headers: {\n        Authorization: `Bearer ${(_process$env$NEXT_PUB = process.env.NEXT_PUBLIC_OPENAI_API_KEY) !== null && _process$env$NEXT_PUB !== void 0 ? _process$env$NEXT_PUB : \"\"}`\n      },\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setLoading(false);\n    setConvertedText(data.text);\n  };\n\n  /*const handleFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n     if (e.target.files && e.target.files[0]) {\r\n       const file = e.target.files[0];\r\n      \r\n       const data = new FormData();\r\n       data.append(\"file\", file);\r\n       data.append(\"model\", \"whisper-1\");\r\n       data.append(\"language\", \"en\");\r\n       setFormData(data);\r\n  \n       // check if the size is less than 25MB\r\n       if (file.size > 25 * 1024 * 1024) {\r\n         alert(\"Please upload an audio file less than 25MB\");\r\n         return;\r\n       }\r\n     }\r\n   };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quick Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendAudio,\n      children: \"Send Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextWriter, {\n      text: convertedText,\n      delay: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wXFGpFhOP5Us3RnPbwiRPk0LRCE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","NEXT_PUBLIC_OPENAI_API_KEY","message","setMessage","response","setResponse","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","formData","setFormData","FormData","handleFile","target","files","file","append","size","alert","convertedText","setConvertedText","string","loading","setLoading","sendAudio","_process$env$NEXT_PUB","Authorization","process","env","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onClick","onSubmit","value","onChange","TextWriter","delay","_c","$RefreshReg$"],"sources":["C:/Users/sdugb/OneDrive/Desktop/scribeaiapp/NoteTakingAI/noteai/src/App.js"],"sourcesContent":["// create a react component that inputs a textarea message then performs a fetch request to localhost:3001 gets back a response a data.message and displys that message in a box below\r\n\r\nimport React, { useState } from 'react'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  const NEXT_PUBLIC_OPENAI_API_KEY=\"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\"\r\n  const [message, setMessage] = useState('')\r\n  const [response, setResponse] = useState('')\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const response = await fetch('http://localhost:3001', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message })\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => setResponse(data.message));\r\n  };\r\n\r\nconst [formData, setFormData] = useState<FormData | null>(null);\r\n// write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\r\n\r\nconst handleFile = async(e) =>{\r\n  \r\n  if (e.target.files && e.target.files[0]) {\r\n    const file = e.target.files[0];\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"model\", \"whisper-1\");\r\n    data.append(\"language\", \"en\");\r\n    setFormData(data);\r\n    if (file.size > 25 * 1024 * 1024) {\r\n      alert(\"Please upload an audio file less than 25MB\");\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nconst [convertedText, setConvertedText] = useState<string>(\"\");\r\nconst [loading, setLoading] = useState(false);\r\n\r\nconst sendAudio = async () => {\r\n  setLoading(true);\r\n  const res = await fetch(\"https://api.openai.com/v1/audio/transcriptions\", {\r\n    headers: {\r\n      Authorization: `Bearer ${process.env.NEXT_PUBLIC_OPENAI_API_KEY ?? \"\"}`,\r\n    },\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n\r\n  const data = await res.json();\r\n  setLoading(false);\r\n\r\n  setConvertedText(data.text);\r\n};\r\n\r\n /*const handleFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n     \r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"model\", \"whisper-1\");\r\n      data.append(\"language\", \"en\");\r\n      setFormData(data);\r\n\r\n      // check if the size is less than 25MB\r\n      if (file.size > 25 * 1024 * 1024) {\r\n        alert(\"Please upload an audio file less than 25MB\");\r\n        return;\r\n      }\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Quick Note</h1>\r\n      <input\r\n            type=\"file\"\r\n            accept=\"audio/*\"\r\n      />\r\n      <button onClick={sendAudio}>Send Audio</button>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea value={message} onChange={(e) => setMessage(e.target.value)} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <div>{response}</div>\r\n      <TextWriter text={convertedText} delay={10} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}