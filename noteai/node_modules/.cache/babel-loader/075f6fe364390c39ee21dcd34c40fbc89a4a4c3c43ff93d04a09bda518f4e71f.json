{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sdugb\\\\OneDrive\\\\Desktop\\\\scribeaiapp\\\\NoteTakingAI\\\\noteai\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// create a react component that inputs a textarea message then performs a fetch request to localhost:3001 gets back a response a data.message and displys that message in a box below\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport TextWriter from './components/TextWriter.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const [hasFile, setHasFile] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:3001', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(res => res.json()).then(data => setResponse(data.message));\n    console.log(\"File Uploaded\");\n  };\n  const [formData, setFormData] = useState(null);\n  // write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\n\n  const handleFile = async e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      const data = new FormData();\n      data.append(\"file\", file);\n      data.append(\"model\", \"whisper-1\");\n      data.append(\"language\", \"en\");\n      setFormData(data);\n      setHasFile(true); // set the flag to true\n      if (file.size > 25 * 1024 * 1024) {\n        alert(\"Please upload an audio file less than 25MB\");\n        setHasFile(false); // reset the flag if the file is too big\n        return;\n      }\n    }\n  };\n  const [convertedText, setConvertedText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const sendAudio = async () => {\n    setLoading(true);\n    if (!formData) {\n      return; // return early if formData is null or undefined\n    }\n\n    const res = await fetch(\"https://api.openai.com/v1/audio/transcriptions\", {\n      headers: {\n        Authorization: `Bearer ${\"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\"}`,\n        model: \"whisper-1\"\n      },\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    setLoading(false);\n    console.log(data);\n    setConvertedText(data.text);\n  };\n\n  /*const handleFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n     if (e.target.files && e.target.files[0]) {\r\n       const file = e.target.files[0];\r\n      \r\n       const data = new FormData();\r\n       data.append(\"file\", file);\r\n       data.append(\"model\", \"whisper-1\");\r\n       data.append(\"language\", \"en\");\r\n       setFormData(data);\r\n  \n       // check if the size is less than 25MB\r\n       if (file.size > 25 * 1024 * 1024) {\r\n         alert(\"Please upload an audio file less than 25MB\");\r\n         return;\r\n       }\r\n     }\r\n   };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quick Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendAudio,\n      children: \"Send Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), hasFile && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendAudio,\n        children: \"Send Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextWriter, {\n      text: convertedText,\n      delay: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d8B9OETurGC7GlWaW2OM1Zr9y2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextWriter","jsxDEV","_jsxDEV","App","_s","message","setMessage","response","setResponse","hasFile","setHasFile","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","formData","setFormData","handleFile","target","files","file","FormData","append","size","alert","convertedText","setConvertedText","loading","setLoading","sendAudio","Authorization","model","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onClick","onSubmit","value","onChange","delay","_c","$RefreshReg$"],"sources":["C:/Users/sdugb/OneDrive/Desktop/scribeaiapp/NoteTakingAI/noteai/src/App.js"],"sourcesContent":["// create a react component that inputs a textarea message then performs a fetch request to localhost:3001 gets back a response a data.message and displys that message in a box below\r\n\r\nimport React, { useState } from 'react'\r\nimport './App.css'\r\nimport TextWriter from './components/TextWriter.js';\r\n\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('')\r\n  const [response, setResponse] = useState('')\r\n\r\n  const [hasFile, setHasFile] = useState(false);\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const response = await fetch('http://localhost:3001', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message })\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => setResponse(data.message));\r\n    console.log(\"File Uploaded\");\r\n  };\r\n\r\nconst [formData, setFormData] = useState(null);\r\n// write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\r\n\r\nconst handleFile = async(e) =>{\r\n  \r\n  if (e.target.files && e.target.files[0]) {\r\n    const file = e.target.files[0];\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"model\", \"whisper-1\");\r\n    data.append(\"language\", \"en\");\r\n    setFormData(data);\r\n    setHasFile(true); // set the flag to true\r\n    if (file.size > 25 * 1024 * 1024) {\r\n      alert(\"Please upload an audio file less than 25MB\");\r\n      setHasFile(false); // reset the flag if the file is too big\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nconst [convertedText, setConvertedText] = useState(\"\");\r\nconst [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\nconst sendAudio = async () => {\r\n  setLoading(true);\r\n  if (!formData) {\r\n    return; // return early if formData is null or undefined\r\n  }\r\n  const res = await fetch(\"https://api.openai.com/v1/audio/transcriptions\", {\r\n    headers: {\r\n      Authorization: `Bearer ${\"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\"}`,\r\n      model: \"whisper-1\",\r\n    },\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n\r\n  const data = await res.json();\r\n  setLoading(false);\r\n  console.log(data);\r\n  setConvertedText(data.text);\r\n};\r\n\r\n /*const handleFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n     \r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"model\", \"whisper-1\");\r\n      data.append(\"language\", \"en\");\r\n      setFormData(data);\r\n\r\n      // check if the size is less than 25MB\r\n      if (file.size > 25 * 1024 * 1024) {\r\n        alert(\"Please upload an audio file less than 25MB\");\r\n        return;\r\n      }\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Quick Note</h1>\r\n      <input\r\n            type=\"file\"\r\n            accept=\"audio/*\"\r\n      />\r\n      <button onClick={sendAudio}>Send Audio</button>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea value={message} onChange={(e) => setMessage(e.target.value)} />\r\n        {hasFile && <button onClick={sendAudio}>Send Audio</button>}\r\n      </form>\r\n      <div>{response}</div>\r\n      <TextWriter text={convertedText} delay={10} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}