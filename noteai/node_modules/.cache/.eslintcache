[{"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\index.js":"1","C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\reportWebVitals.js":"2","C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\App.js":"3","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\index.js":"4","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\App.js":"5","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\reportWebVitals.js":"6","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\UploadFileBox.js":"7","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\TextWriter.js":"8","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\Drop-File-Input\\DropFileInput.jsx":"9","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\config\\imageConfig.js":"10"},{"size":552,"mtime":1678057236793,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1678057236795,"results":"13","hashOfConfig":"12"},{"size":1037,"mtime":1678057236792,"results":"14","hashOfConfig":"12"},{"size":552,"mtime":1678057236793,"results":"15","hashOfConfig":"16"},{"size":3381,"mtime":1678159133638,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1678057236795,"results":"18","hashOfConfig":"16"},{"size":349,"mtime":1678158343641,"results":"19","hashOfConfig":"16"},{"size":992,"mtime":1678153642509,"results":"20","hashOfConfig":"16"},{"size":1941,"mtime":1678159174052,"results":"21","hashOfConfig":"16"},{"size":282,"mtime":1678155875785,"results":"22","hashOfConfig":"16"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dr4x5g",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1le90mf",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\index.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\reportWebVitals.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\App.js",["57"],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\index.js",[],[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\App.js",["58","59","60","61","62","63"],[],"// create a react component that inputs a textarea message then performs a fetch request to localhost:3001 gets back a response a data.message and displys that message in a box below\r\n\r\nimport React, { useState } from 'react'\r\nimport './App.css'\r\nimport TextWriter from './components/TextWriter.js';\r\nimport UploadFileBox from './components/UploadFileBox';\r\nimport DropFileInput from './components/Drop-File-Input/DropFileInput';\r\n\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('')\r\n  const [response, setResponse] = useState('')\r\n\r\n  const [hasFile, setHasFile] = useState(false);\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const response = await fetch('http://localhost:3001', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message })\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => setResponse(data.message));\r\n    console.log(\"submitted\");\r\n  };\r\n\r\nconst [formData, setFormData] = useState(null);\r\n// write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\r\n\r\nconst handleFile = async(e) =>{\r\n  \r\n  if (e.target.files && e.target.files[0]) {\r\n    const file = e.target.files[0];\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    data.append(\"model\", \"whisper-1\");\r\n    setFormData(data);\r\n    console.log(\"File Uploaded\");\r\n\r\n    setHasFile(true); // set the flag to true\r\n    if (file.size > 25 * 1024 * 1024) {\r\n      alert(\"Please upload an audio file less than 25MB\");\r\n      console.log(\"Please upload an audio file less than 25MB\");\r\n\r\n      setHasFile(false); // reset the flag if the file is too big\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\nconst [convertedText, setConvertedText] = useState(\"\");\r\nconst [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\nconst sendAudio = async () => {\r\n  setLoading(true);\r\n  const res = await fetch(\"https://api.openai.com/v1/audio/transcriptions\", {\r\n    headers: {\r\n      \"Authorization\": `Bearer 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`,\r\n    },\r\n    method: \"POST\",\r\n    body: formData,\r\n  });\r\n  console.log(\"audio sent\");\r\n  const data = await res.json();\r\n  setLoading(false);\r\n  console.log(data.text);\r\n  setConvertedText(data.text);\r\n};\r\n\r\n /*const handleFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n     \r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"model\", \"whisper-1\");\r\n      data.append(\"language\", \"en\");\r\n      setFormData(data);\r\n\r\n      // check if the size is less than 25MB\r\n      if (file.size > 25 * 1024 * 1024) {\r\n        alert(\"Please upload an audio file less than 25MB\");\r\n        return;\r\n      }\r\n    }\r\n  };*/\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <UploadFileBox/>\r\n      <h1>Quick Note</h1>\r\n    \r\n      <button onClick={sendAudio}>Send Audio</button>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea value={message} onChange={(e) => setMessage(e.target.value)} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      <div>{response}</div>\r\n      <div>{convertedText}</div>\r\n      { /*\r\n      <TextWriter text={convertedText} delay={10} />*/\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\reportWebVitals.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\UploadFileBox.js",["64"],[],"//import react\r\nimport React, { useState } from 'react';\r\nimport DropFileInput from './Drop-File-Input/DropFileInput.jsx';\r\n\r\nconst UploadFileBox = () => {\r\n\treturn(\r\n\t\t<div className=\"box\">\r\n\t\t\t<h2 className=\"header\">\r\n\t\t\t\tGet Summerized Lectures With AI\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t<DropFileInput/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default UploadFileBox;","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\TextWriter.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\Drop-File-Input\\DropFileInput.jsx",["65","66","67","68","69","70"],[],"//import react\r\nimport React from 'react';\r\nimport { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nimport './drop-file-input.css';\r\n\r\nimport { ImageConfig } from '../../config/imageConfig';\r\nimport uploadImg from '../../assets/images/upload.png';\r\n\r\n\r\n\r\nconst DropFileInput = props => {\r\n\tconst wrapperRef = useRef(null);\r\n\tconst [fileList, setFileList] = useState([]);\r\n\t\r\n\tconst [hasFile, setHasFile] = useState(false);\r\n\r\n\tconst onDrageEnter = () => wrapperRef.current.classList.add('dragover');\r\n\tconst onDrageLeave = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n\tconst onDrop = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n\t\r\n\tconst [formData, setFormData] = useState(null);\r\n\t// write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\r\n\r\n\tconst handleFile = async(e) =>{\r\n\t\tif (e.target.files && e.target.files[0]) {\r\n\t\t\tconst file = e.target.files[0];\r\n\t\t\tconst data = new FormData();\r\n\t\t\tdata.append(\"file\", file);\r\n\t\t\tdata.append(\"model\", \"whisper-1\");\r\n\t\t\tsetFormData(data);\r\n\t\t\tconsole.log(\"File Uploaded\");\r\n\r\n\t\t\tsetHasFile(true); // set the flag to true\r\n\t\t\tif (file.size > 25 * 1024 * 1024) {\r\n\t\t\talert(\"Please upload an audio file less than 25MB\");\r\n\t\t\tconsole.log(\"Please upload an audio file less than 25MB\");\r\n\r\n\t\t\tsetHasFile(false); // reset the flag if the file is too big\r\n\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div \r\n\t\t\tref ={wrapperRef}\r\n\t\t\tclassName=\"drop-file-input\"\r\n\t\t\tonDragEnter={onDrageEnter}\r\n\t\t\tonDragLeave={onDrageLeave}\r\n\t\t\tonDrop={onDrop}\r\n\t\t>\r\n\t\t\t<div className=\"drop-file-input__label\">\r\n\t\t\t\t<img src={uploadImg} alt=\"upload\" />\r\n\t\t\t\t<p>Drag & Drop your file here.</p>\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\taccept=\"audio/*\"\r\n\t\t\t\tonChange={handleFile}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDropFileInput.propTypes = {\r\n}\r\n\r\nexport default DropFileInput","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\config\\imageConfig.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":12,"column":11,"nodeType":"73","messageId":"74","endLine":12,"endColumn":19},{"ruleId":"71","severity":1,"message":"75","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":21},{"ruleId":"71","severity":1,"message":"77","line":14,"column":10,"nodeType":"73","messageId":"74","endLine":14,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":19,"column":11,"nodeType":"73","messageId":"74","endLine":19,"endColumn":19},{"ruleId":"71","severity":1,"message":"78","line":34,"column":7,"nodeType":"73","messageId":"74","endLine":34,"endColumn":17},{"ruleId":"71","severity":1,"message":"79","line":56,"column":8,"nodeType":"73","messageId":"74","endLine":56,"endColumn":15},{"ruleId":"71","severity":1,"message":"80","line":2,"column":17,"nodeType":"73","messageId":"74","endLine":2,"endColumn":25},{"ruleId":"71","severity":1,"message":"81","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":17},{"ruleId":"71","severity":1,"message":"82","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":21},{"ruleId":"71","severity":1,"message":"83","line":16,"column":9,"nodeType":"73","messageId":"74","endLine":16,"endColumn":17},{"ruleId":"71","severity":1,"message":"84","line":16,"column":19,"nodeType":"73","messageId":"74","endLine":16,"endColumn":30},{"ruleId":"71","severity":1,"message":"77","line":18,"column":9,"nodeType":"73","messageId":"74","endLine":18,"endColumn":16},{"ruleId":"71","severity":1,"message":"85","line":26,"column":9,"nodeType":"73","messageId":"74","endLine":26,"endColumn":17},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'TextWriter' is defined but never used.","'DropFileInput' is defined but never used.","'hasFile' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'ImageConfig' is defined but never used.","'fileList' is assigned a value but never used.","'setFileList' is assigned a value but never used.","'formData' is assigned a value but never used."]