[{"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\index.js":"1","C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\reportWebVitals.js":"2","C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\App.js":"3","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\index.js":"4","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\App.js":"5","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\reportWebVitals.js":"6","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\UploadFileBox.js":"7","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\TextWriter.js":"8","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\Drop-File-Input\\DropFileInput.jsx":"9","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\config\\imageConfig.js":"10","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\TextAreaBox.js":"11"},{"size":552,"mtime":1678057236793,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1678057236795,"results":"14","hashOfConfig":"13"},{"size":1037,"mtime":1678057236792,"results":"15","hashOfConfig":"13"},{"size":552,"mtime":1678057236793,"results":"16","hashOfConfig":"17"},{"size":3281,"mtime":1678302950848,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1678057236795,"results":"19","hashOfConfig":"17"},{"size":1858,"mtime":1678303963294,"results":"20","hashOfConfig":"17"},{"size":992,"mtime":1678153642509,"results":"21","hashOfConfig":"17"},{"size":3054,"mtime":1678216445594,"results":"22","hashOfConfig":"17"},{"size":406,"mtime":1678216249942,"results":"23","hashOfConfig":"17"},{"size":713,"mtime":1678227317844,"results":"24","hashOfConfig":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dr4x5g",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1le90mf",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"37"},"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\index.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\reportWebVitals.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\NoteApp\\SmartScribeAI\\noteai\\src\\App.js",["63"],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\index.js",[],[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\App.js",["64","65","66","67","68","69","70","71","72","73"],[],"// create a react component that inputs a textarea message then performs a fetch request to localhost:3001 gets back a response a data.message and displys that message in a box below\r\n\r\nimport React, { useState } from 'react'\r\nimport './App.css'\r\nimport TextWriter from './components/TextWriter.js';\r\nimport UploadFileBox from './components/UploadFileBox';\r\nimport TextAreaBox from './components/TextAreaBox';\r\nimport DropFileInput from './components/Drop-File-Input/DropFileInput';\r\n//import ion-icon\r\n\r\nfunction App() {\r\n  const [message, setMessage] = useState('')\r\n  const [response, setResponse] = useState('')\r\n\r\n  const [convertedText, setConvertedText] = useState(\"\");\r\n\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const response = await fetch('http://localhost:3001', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ message })\r\n    })\r\n    .then(res => res.json())\r\n    .then((data) => setResponse(data.message));\r\n    console.log(\"submitted\");\r\n  };\r\n\r\nconst [formData, setFormData] = useState(null);\r\n// write a handleFile function that takes in a file and sets the formData state to a new FormData object with the file appended to it\r\n\r\n\r\n\r\n\r\n\r\n\r\n /*const handleFile = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n     \r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"model\", \"whisper-1\");\r\n      data.append(\"language\", \"en\");\r\n      setFormData(data);\r\n\r\n      // check if the size is less than 25MB\r\n      if (file.size > 25 * 1024 * 1024) {\r\n        alert(\"Please upload an audio file less than 25MB\");\r\n        return;\r\n      }\r\n    }\r\n  };*/\r\n\r\nconst[textdata, setTextData] = useState(\"\");\r\n\r\n\r\nconst getData = (textdata) => {\r\n  console.log(textdata);\r\n  setTextData(textdata);\r\n};\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Quick Note</h1>\r\n      \r\n      <div className=\"content-box\">\r\n        <div className=\"header-area\">\r\n          <div className =\"boxdefault\">\r\n            <div class = \"header-text-area\">\r\n              <div className=\"box-body\">\r\n\r\n                <div className =\"form-header-title\">\r\n                  <h4 className=\"toplogy\">\r\n                    <span class =\"primaryTextColor\">Need Notes?</span>\r\n                    We've got this.\r\n                  </h4>\r\n                  <span className=\"toplolgy-mini\">\r\n                    Get Summerized Lectures With AI\r\n                  </span>\r\n                </div>\r\n                <div className =\"primary-action-btn gradient-animated-box\">\r\n                  <button type=\"button\" className=\"ant-btn\">\r\n                      <span>Upgrade</span>\r\n                  </button>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"left-rail-area flex\">\r\n          <TextAreaBox text ={textdata}/>\r\n        </div>\r\n        <div className=\"right-rail-area flex\">\r\n        <UploadFileBox onClick={getData}/>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      { /*\r\n      <TextWriter text={convertedText} delay={10} />*/\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\reportWebVitals.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\UploadFileBox.js",["74","75","76","77","78","79"],[],"//import react\r\nimport React, { useState } from 'react';\r\nimport DropFileInput from './Drop-File-Input/DropFileInput';\r\nconst OpenAI = require('openai');\r\nconst {Configuration, OpenAIApi} = OpenAI;\r\n\r\nconst UploadFileBox = (props) => {\r\n\t\r\n\tconst [convertedText, setConvertedText] = useState(\"\");\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [formData, setFormData] = useState(null);\r\n\tconst [hasFile, setHasFile] = useState(false);\r\n\tconst api_key = process.env.OPEN_AI_KEY;\r\n\r\n\r\n\tconst handleFile = async(e) =>{\r\n  \r\n\t\tif (e.target.files && e.target.files[0]) \r\n\t\t{\r\n\t\t  const file = e.target.files[0];\r\n\t\t  const data = new FormData();\r\n\t\t  data.append(\"file\", file);\r\n\t\t  data.append(\"model\", \"whisper-1\");\r\n\t\t  setFormData(data);\r\n\t\t  console.log(\"File Uploaded\");\r\n\t  \r\n\t\t  setHasFile(true); // set the flag to true\r\n\t\t  if (file.size > 25 * 1024 * 1024) \r\n\t\t  {\r\n\t\t\talert(\"Please upload an audio file less than 25MB\");\r\n\t\t\tconsole.log(\"Please upload an audio file less than 25MB\");\r\n\t  \r\n\t\t\tsetHasFile(false); // reset the flag if the file is too big\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t}\r\n\t}\r\n\r\n\tconst sendAudio = async () => {\r\n\t\tsetLoading(true);\r\n\t\tconst res = await fetch(\"https://api.openai.com/v1/audio/transcriptions\", {\r\n\t\t  headers: \r\n\t\t\t`Authorization: Bearer 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`\r\n\t\t  ,\r\n\t\t  method: \"POST\",\r\n\t\t  body: formData,\r\n\t\t});\r\n\t\tconsole.log(\"audio sent\");\r\n\t\tconst data = await res.json();\r\n\t\tsetLoading(false);\r\n\t\tconsole.log(data.text);\r\n\t\tsetConvertedText(data.text);\r\n\t\tprops.onClick(convertedText);\r\n\t  };\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"box\">\r\n\t\t\t<h2 className=\"header\">\r\n\t\t\t\tGet Summerized Lectures With AI\r\n\t\t\t</h2>\r\n\t\t\t{\r\n\t\t\t<DropFileInput/>\r\n\r\n\t\t\t}\r\n\t\t\t<button type = \"button\" className =\"ant-btn\" onClick={sendAudio}>Send Audio</button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default UploadFileBox;","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\TextWriter.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\Drop-File-Input\\DropFileInput.jsx",["80","81"],[],"import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './drop-file-input.css';\r\n\r\nimport { ImageConfig } from '../../config/imageConfig';\r\nimport uploadImg from '../../assets/images/upload.png';\r\n\r\nconst DropFileInput = (props) => {\r\n  const wrapperRef = useRef(null);\r\n  const [fileList, setFileList] = useState([]);\r\n  const [hasFile, setHasFile] = useState(false);\r\n  const [formData, setFormData] = useState(null);\r\n\r\n  const onDrageEnter = () => wrapperRef.current.classList.add('dragover');\r\n  const onDrageLeave = () => wrapperRef.current.classList.remove('dragover');\r\n  const onDrop = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n  const handleFile = async (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      const updatedList = [...fileList, file];\r\n      setFileList(updatedList);\r\n      props.onFileChange(updatedList);\r\n      const data = new FormData();\r\n      data.append('file', file);\r\n      data.append('model', 'whisper-1');\r\n      setFormData(data);\r\n      console.log('File Uploaded');\r\n\r\n      setHasFile(true); // set the flag to true\r\n      if (file.size > 25 * 1024 * 1024) {\r\n        alert('Please upload an audio file less than 25MB');\r\n        console.log('Please upload an audio file less than 25MB');\r\n        setHasFile(false); // reset the flag if the file is too big\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  const fileRemove = (index) => {\r\n    const updatedList = [...fileList];\r\n    updatedList.splice(index, 1);\r\n    setFileList(updatedList);\r\n    props.onFileChange(updatedList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        ref={wrapperRef}\r\n        className='drop-file-input'\r\n        onDragEnter={onDrageEnter}\r\n        onDragLeave={onDrageLeave}\r\n        onDrop={onDrop}\r\n      >\r\n        <div className='drop-file-input__label'>\r\n          <img src={uploadImg} alt='upload' />\r\n          <p>Drag & Drop your file here.</p>\r\n        </div>\r\n        <input type='file' accept='audio/*' onChange={handleFile} />\r\n      </div>\r\n      {fileList.length > 0 ? (\r\n        <div className='drop-file-preview'>\r\n          <p className='drop-file-preview__title'>Uploaded</p>\r\n          {fileList.map((item, index) => (\r\n            <div className='drop-file-preview__item' key={index}>\r\n              <img\r\n                src={ImageConfig[item.type.split('/')[1] || ImageConfig['default']]}\r\n                alt='file'\r\n              />\r\n              <div className='drop-file-preview__item__info'>\r\n                <p>{item.name}</p>\r\n                <p>{Math.round(item.size/1024)} KB</p>\r\n              </div>\r\n              <span\r\n                className='drop-file-preview__item__del'\r\n                onClick={() => fileRemove(index)}\r\n              >\r\n                \r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nDropFileInput.propTypes = {\r\n  onFileChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DropFileInput;\r\n","C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\config\\imageConfig.js",[],[],"C:\\Users\\sdugb\\OneDrive\\Desktop\\scribeaiapp\\NoteTakingAI\\noteai\\src\\components\\TextAreaBox.js",["82","83"],[],"//import react\r\nimport React, { useState } from 'react';\r\nimport DropFileInput from './Drop-File-Input/DropFileInput';\r\nimport './text-area-box.css';\r\n\r\nconst fillerText = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec auctor, nisl eget ultricies lacinia, nisl nisl aliquet nisl, eget aliquet nis\";\r\n\r\nconst TextAreaBox = ({text}) => {\r\n\treturn(\r\n\t\t<div className=\"flex flex-column flex-1\">\r\n\t\t\t<div className =\"boxdefault results-card\">\r\n\t\t\t\t<div className = \"box-body\">\r\n\t\t\t\t\t<div className=\"text-area\">\r\n\t\t\t\t\t\t<div className = \"output-format\">\r\n\t\t\t\t\t\t\t{fillerText}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\n//write random filler text\r\n\r\nexport default TextAreaBox;",{"ruleId":"84","severity":1,"message":"85","line":12,"column":11,"nodeType":"86","messageId":"87","endLine":12,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":21},{"ruleId":"84","severity":1,"message":"90","line":12,"column":19,"nodeType":"86","messageId":"87","endLine":12,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":13,"column":10,"nodeType":"86","messageId":"87","endLine":13,"endColumn":18},{"ruleId":"84","severity":1,"message":"91","line":15,"column":10,"nodeType":"86","messageId":"87","endLine":15,"endColumn":23},{"ruleId":"84","severity":1,"message":"92","line":15,"column":25,"nodeType":"86","messageId":"87","endLine":15,"endColumn":41},{"ruleId":"84","severity":1,"message":"93","line":19,"column":9,"nodeType":"86","messageId":"87","endLine":19,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":21,"column":11,"nodeType":"86","messageId":"87","endLine":21,"endColumn":19},{"ruleId":"84","severity":1,"message":"94","line":33,"column":8,"nodeType":"86","messageId":"87","endLine":33,"endColumn":16},{"ruleId":"84","severity":1,"message":"95","line":33,"column":18,"nodeType":"86","messageId":"87","endLine":33,"endColumn":29},{"ruleId":"84","severity":1,"message":"96","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":21},{"ruleId":"84","severity":1,"message":"97","line":5,"column":23,"nodeType":"86","messageId":"87","endLine":5,"endColumn":32},{"ruleId":"84","severity":1,"message":"98","line":10,"column":9,"nodeType":"86","messageId":"87","endLine":10,"endColumn":16},{"ruleId":"84","severity":1,"message":"99","line":12,"column":9,"nodeType":"86","messageId":"87","endLine":12,"endColumn":16},{"ruleId":"84","severity":1,"message":"100","line":13,"column":8,"nodeType":"86","messageId":"87","endLine":13,"endColumn":15},{"ruleId":"84","severity":1,"message":"101","line":16,"column":8,"nodeType":"86","messageId":"87","endLine":16,"endColumn":18},{"ruleId":"84","severity":1,"message":"99","line":12,"column":10,"nodeType":"86","messageId":"87","endLine":12,"endColumn":17},{"ruleId":"84","severity":1,"message":"94","line":13,"column":10,"nodeType":"86","messageId":"87","endLine":13,"endColumn":18},{"ruleId":"84","severity":1,"message":"102","line":2,"column":17,"nodeType":"86","messageId":"87","endLine":2,"endColumn":25},{"ruleId":"84","severity":1,"message":"89","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":21},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'TextWriter' is defined but never used.","'DropFileInput' is defined but never used.","'setMessage' is assigned a value but never used.","'convertedText' is assigned a value but never used.","'setConvertedText' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","'Configuration' is assigned a value but never used.","'OpenAIApi' is assigned a value but never used.","'loading' is assigned a value but never used.","'hasFile' is assigned a value but never used.","'api_key' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'useState' is defined but never used."]